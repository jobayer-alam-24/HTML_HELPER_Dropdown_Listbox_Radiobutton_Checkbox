@model UserRegistrationModel
@{
    ViewData["Title"] = "Register";
}
<div class="container mt-5">
    <h2 class="text-center">User Registration</h2>
    <form asp-action="Register" method="post" class="mt-4">
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
                @Html.LabelFor(m => m.Name, new { @class = "form-label me-2" })
            </div>
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
                @Html.LabelFor(m => m.Email, new { @class = "form-label me-2" })
            </div>
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
                @Html.LabelFor(m => m.Password, new { @class = "form-label me-2" })
            </div>
            <div class="col-md-7">
               @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
               @Html.LabelFor(m => m.Address, new { @class = "form-label me-2" })
            </div>
            <div class="col-md-7">
               @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
                <label class="form-label">Gender</label>
            </div>
            <div class="col-md-7">
               @Html.RadioButtonFor(m => m.Gender, "Male") Male
               @Html.RadioButtonFor(m => m.Gender, "Femaile") Female
               @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
                @Html.LabelFor(m => m.SelectedCourse, new { @class = "form-label me-2" })
            </div>
            <div class="col-md-7">
               @Html.DropDownListFor(m => m.SelectedCourse, new SelectList(Model.Courses), "==Select A Course==", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SelectedCourse, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
                @Html.LabelFor(m => m.SelectedSkills, new { @class = "form-label me-2" })
            </div>
            <div class="col-md-7">
               @Html.ListBoxFor(m => m.SelectedSkills, new MultiSelectList(Model.Skills), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SelectedSkills, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2 d-flex align-items-center">
            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
            </div>
            <div class="col-md-7 d-flex align-items-center">
            @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
            </div>
        </div>
        @Html.HiddenFor(m => m.HiddenField)
        <button type="submit" class="btn btn-primary">Register</button>
    </form>
</div>